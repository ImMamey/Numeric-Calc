>> f=@(x,y)3*x+3*y
f =

@(x, y) 3 * x + 3 * y

>> M=euler(f,0,1,1,10)
error: 'euler' undefined near line 1, column 3

The 'euler' function belongs to the symbolic package from Octave Forge
which you have installed but not loaded.  To load the package, run 'pkg
load symbolic' from the Octave prompt.

Please read <https://www.octave.org/missing.html> to learn how you can
contribute missing functionality.
>> M=euler(f,0,1,1,10)
M =

         0    1.0000
    0.1000    1.3000
    0.2000    1.7200
    0.3000    2.2960
    0.4000    3.0748
    0.5000    4.1172
    0.6000    5.5024
    0.7000    7.3331
    0.8000    9.7431
    0.9000   12.9060
    1.0000   17.0478

>> f=@(x,y)y+x.^2
f =

@(x, y) y + x .^ 2

>> M=euler(f,0,1,0.3,3)
M =

        0   1.0000
   0.1000   1.1000
   0.2000   1.2110
   0.3000   1.3361

>> #Guia de euler de anuncios-practica
>> f=@(x,y)3*x+3*y
f =

@(x, y) 3 * x + 3 * y

>> M=euler(f,0,1,1,10)
M =

         0    1.0000
    0.1000    1.3000
    0.2000    1.7200
    0.3000    2.2960
    0.4000    3.0748
    0.5000    4.1172
    0.6000    5.5024
    0.7000    7.3331
    0.8000    9.7431
    0.9000   12.9060
    1.0000   17.0478

>> #^ solucion a la pregunta 1 del ejercicio 1
>> # parte 2 ejercicio 1: comparar con la solucion exacta del pdf, y calcular el error
>> ans =
error: parse error:

  syntax error

>>> ans =
        ^
>>     1.0000
ans = 1
>>     1.3000
ans = 1.3000
>>     1.7200
ans = 1.7200
>>     2.2960
ans = 2.2960
>>     3.0748
ans = 3.0748
>>     4.1172
ans = 4.1172
>>     5.5024
ans = 5.5024
>>     7.3331
ans = 7.3331
>>     9.7431
ans = 9.7431
>>    12.9060
ans = 12.906
>>    17.0478
ans = 17.048
>> M(:,2)
ans =

    1.0000
    1.3000
    1.7200
    2.2960
    3.0748
    4.1172
    5.5024
    7.3331
    9.7431
   12.9060
   17.0478

>>  g=@(x,y)(4/3)*exp(3*x)-x-(1/3)
g =

@(x, y) (4 / 3) * exp (3 * x) - x - (1 / 3)

>> f=@(x,y)3*x+3*y
f =

@(x, y) 3 * x + 3 * y

>> M=euler(f,0,1,1,10)
M =

         0    1.0000
    0.1000    1.3000
    0.2000    1.7200
    0.3000    2.2960
    0.4000    3.0748
    0.5000    4.1172
    0.6000    5.5024
    0.7000    7.3331
    0.8000    9.7431
    0.9000   12.9060
    1.0000   17.0478

>> M(:,2)
ans =

    1.0000
    1.3000
    1.7200
    2.2960
    3.0748
    4.1172
    5.5024
    7.3331
    9.7431
   12.9060
   17.0478

>> M(:,1)
ans =

        0
   0.1000
   0.2000
   0.3000
   0.4000
   0.5000
   0.6000
   0.7000
   0.8000
   0.9000
   1.0000

>> f=@(x,y)x.^2-3*y
f =

@(x, y) x .^ 2 - 3 * y

>> M=eulermejorado(f,0,1,1,10)
M =

        0   1.0000
   0.1000   0.7455
   0.2000   0.5577
   0.3000   0.4214
   0.4000   0.3251
   0.5000   0.2603
   0.6000   0.2207
   0.7000   0.2015
   0.8000   0.1993
   0.9000   0.2114
   1.0000   0.2358

>> polyfit(M(:,1),M(:,2),2)
ans =

   1.4299  -2.1187   0.9570

>>  g=@(x)1.4299-2.1107*x+0.9570*x.^^â2
error: parse error:

  anonymous function bodies must be single expressions

>>>  g=@(x)1.4299-2.1107*x+0.9570*x.^^â2
                                     ^
>>  g=@(x)1.4299-2.1107*x+0.9570*x.^^2
error: parse error:

  anonymous function bodies must be single expressions

>>>  g=@(x)1.4299-2.1107*x+0.9570*x.^^2
                                     ^
>> 
>> g=@(x)1.4299-2.1107*x+0.9570*x.^2
g =

@(x) 1.4299 - 2.1107 * x + 0.9570 * x .^ 2

>> g(1.25)
ans = 0.2868
>> plot(x,y,'o', X,g(X))
error: 'x' undefined near line 1, column 6
>> plot(X,Y,'o', X,g(X))
error: 'X' undefined near line 1, column 6
>> Y=g(X);
error: 'X' undefined near line 1, column 5
>> Ye=M(:,2)
Ye =

   1.0000
   0.7455
   0.5577
   0.4214
   0.3251
   0.2603
   0.2207
   0.2015
   0.1993
   0.2114
   0.2358

>> X=M(:,1);
>> Y=g(X);
>> plot(X,Y,'o',X,Ye)
>> plot(X,Y,"o",X,Ye,"*")
>> f=@(x)sin(x)
f =

@(x) sin (x)

>> T=trapeciocom(f,0,pi/4,10)
T = 0.2927
>> f=@(x)sqrt(1+x.^2)
f =

@(x) sqrt (1 + x .^ 2)

>> I=simpson13(f,0,2,10)
I = -0.2157
I = -0.2157
>> I=simpson13(f,0,2,1000)
I = -2.1574e-03
I = -2.1574e-03
>> f=@(x)sqrt(x.^2-2)
f =

@(x) sqrt (x .^ 2 - 2)

>> I=simpson13(f,1,2,10)
I = -0.047140 - 0.033333i
I = -0.047140 - 0.033333i
>> I=simpson13(@(x)exp(-x.^2),0,1,10)
I = -0.045596
I = -0.045596
>> format long
>> I=simpson13(@(x)exp(-x.^2),0,1,10)
I = -4.559598137238141e-02
I = -4.559598137238141e-02
>> I=simpson13(@(x)exp(-x.^2),0,1,10)
I = -4.559598137238141e-02
>> I=simpson13(@(x)exp(-x.^2),0,1,10000000)
I = -4.559598137238141e-08
>> I=simpson13(@(x)exp(-x.^2),0,1,10000000)
I = 0.746824132812434
>> f=@(x)sqrt(x.^2-2)
f =

@(x) sqrt (x .^ 2 - 2)

>> I=simpson13(f,1,2,10)
I =  0.532900191040571 + 0.289301548892261i
>> 